/**
 * @author moshangcheng
 * @version 1.0
 * @date 2011-7-20 下午01:43:59
 * @brief
 */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class TheLuckyBasesDivTwo {
public:
	bool isLegal(long long n, long long b) {
		while (n % b == 4 || n % b == 7) {
			n /= b;
		}
		return n == 0;
	}

	long long find(long long n) {
		if (n == 4 || n == 7) {
			return -1;
		}
		long long sum = 0;
		for (long long i = 2; i * i <= n; i++) {
			if ((n - 4) % i == 0) {
				if (isLegal(n, i)) {
					sum++;
				}
				if (isLegal(n, (n - 4) / i)) {
					sum++;
				}
			} else if ((n - 7) % i == 0) {
				if (isLegal(n, i)) {
					sum++;
				}
				if (isLegal(n, (n - 7) / i)) {
					sum++;
				}
			}
		}
		return sum;
	}
};

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, long long p0, bool hasAnswer, long long p1) {
	cout << "Test " << testNum << ": [" << p0;
	cout << "]" << endl;
	TheLuckyBasesDivTwo *obj;
	long long answer;
	obj = new TheLuckyBasesDivTwo();
	clock_t startTime = clock();
	answer = obj->find(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC
			<< " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p1 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p1;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	long long p0;
	long long p1;

	{
		// ----- test 0 -----
		p0 = 255ll;
		p1 = 1ll;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		p0 = 4ll;
		p1 = -1ll;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		p0 = 13ll;
		p1 = 0ll;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 3 -----
		p0 = 60ll;
		p1 = 2ll;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
