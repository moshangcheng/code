/**
 * @author moshangcheng
 * @version 1.0-
 * @date 2011-8-10 上午11:21:10
 * @brief TopCoder SRM514 div1 A
 * 不管n取哪些值，(0,2)是可达的，所以(2i,2j)这种点是可达的。
 * 因为(1,n)是可达的，若n为偶数，则(1,0)是可达的，进而所有点可达；
 * 若n为奇数，则(1,1)是可达的，所以(2i+1,2j+1)这种点是可达的。
 */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class MagicalGirlLevelOneDivOne {
public:
	string isReachable(vector<int> jumpTypes, int x, int y) {
		if ((x + y) % 2 == 0) {
			return "YES";
		} else {
			for (int i = 0; i < jumpTypes.size(); i++) {
				if (jumpTypes[i] % 2 == 0) {
					return "YES";
				}
			}
		}
		return "NO";
	}
};

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, vector<int> p0, int p1, int p2,
		bool hasAnswer, string p3) {
	cout << "Test " << testNum << ": [" << "{";
	for (int i = 0; int(p0.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << p0[i];
	}
	cout << "}" << "," << p1 << "," << p2;
	cout << "]" << endl;
	MagicalGirlLevelOneDivOne *obj;
	string answer;
	obj = new MagicalGirlLevelOneDivOne();
	clock_t startTime = clock();
	answer = obj->isReachable(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC
			<< " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << "\"" << p3 << "\"" << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << "\"" << answer << "\"" << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	vector<int> p0;
	int p1;
	int p2;
	string p3;

	{
		// ----- test 0 -----
		int t0[] = { 2 };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		p1 = 5;
		p2 = 4;
		p3 = "YES";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		int t0[] = { 3 };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		p1 = 5;
		p2 = 4;
		p3 = "NO";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		int t0[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		p1 = 1000000000;
		p2 = -999999999;
		p3 = "YES";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 3 -----
		int t0[] = { 999999999 };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		p1 = 999999999;
		p2 = 0;
		p3 = "NO";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
